<?xml version="1.0" encoding="UTF-8"?>
<!-- This web.xml file is not required when using Servlet 3.0 container,
     see implementation details http://jersey.java.net/nonav/documentation/latest/jax-rs.html -->
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

    <!--  -->
    <context-param>
        <param-name>CamelContextLifecycle</param-name>
        <param-value>com.davidholiday.camel.harness.context.HarnessedAppContextLifecycleWithStopSampleRoute</param-value>
    </context-param>

    <!-- location of Camel route builder(s) ** this can also be a route xml file w/o the packagescan directive ** -->
    <!-- *ACHTUNG* there can't be any spaces around the ':' separating 'packagescan' and the package name-->
    <context-param>
        <param-name>RouteBuilders</param-name>
        <param-value>packagescan:com.davidholiday.camel.harness.routebuilders</param-value>
    </context-param>


    <!-- Camel servlet used in the application -->
    <servlet>
        <servlet-name>CamelServlet</servlet-name>
        <servlet-class>org.apache.camel.component.servlet.CamelHttpTransportServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <!-- Camel servlet mapping -->
    <servlet-mapping>
        <servlet-name>CamelServlet</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping>

    <!-- the listener that kick-starts Camel -->
    <!-- If you use org.apache.camel.component.servletlistener.JndiCamelServletContextListener then the
         CamelContextLifecycle must use the JndiRegistry as well. And likewise if the servlet is
         org.apache.camel.component.servletlistener.SimpleCamelServletContextListener then the CamelContextLifecycle
         must use the SimpleRegistry -->
    <listener>
        <listener-class>org.apache.camel.component.servletlistener.JndiCamelServletContextListener</listener-class>
    </listener>

</web-app>
